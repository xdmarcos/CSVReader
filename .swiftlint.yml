# Check https://github.com/realm/SwiftLint#configuration for custom configurations
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Pods
  - fastlane
  - certificates
  - .rbenv
  - Library

disabled_rules: # Disable rules from the default enabled set. rule identifiers to exclude from running
  - number_separator
  - void_return
  - unused_setter_value

opt_in_rules: # Enable rules not from the default set. Some rules are only opt-in
  - force_unwrapping
  - implicitly_unwrapped_optional
  - empty_count
  - file_header
  - explicit_init
  - closure_spacing
  - overridden_super_call
  - redundant_nil_coalescing
  - nimble_operator
  - operator_usage_whitespace
  - first_where
  - prohibited_super_call
  - fatal_error_message
  - vertical_parameter_alignment_on_call
  - extension_access_modifier
  - pattern_matching_keywords
  - array_init
  - literal_expression_end_indentation
  - switch_case_on_newline
  - joined_default_parameter

cyclomatic_complexity:
  ignores_case_statements: true

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 180
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
function_body_length:
  warning: 100
  error: 200

file_length:
  warning: 500
  error: 1000

type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50

identifier_name:
  min_length: # only min_length
    error: 3 # only error
  excluded: # excluded via string array
    - i
    - j
    - k

trailing_whitespace:
  ignores_empty_lines: true
  ignores_comments: true

nesting:
  type_level: 3